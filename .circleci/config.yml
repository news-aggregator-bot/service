version: 2.1
workflows:
  build:
    jobs:
      - build-deploy:
          context: DEPLOY
jobs:
  build-deploy:

    working_directory: ~/na-service

    docker:
      - image: circleci/openjdk:8-jdk-stretch

    steps: # a collection of executable commands

      - checkout # check out source code to working directory
      - add_ssh_keys
      - setup_remote_docker

      - restore_cache:
          keys:
            - na-service-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: na-service-{{ checksum "pom.xml" }}

      - run: mvn package # run the actual tests

      - run:
          name: docker-compose
          command: |
            set -x
            docker network create na
            docker-compose --project-name na -f docker-compose.yml up --build --no-start na-service

      - run:
          name: docker login
          command:
            echo "$GITHUB_TOKEN" | docker login https://docker.pkg.github.com --username $GITHUB_USER --password-stdin

      #      - run:
      #          name: docker push
      #          command: docker push docker.pkg.github.com/news-aggregator-bot/artifactory/vlad110kg.na-service:latest
      - run:
          name: docker swarm join
          command: |
            docker swarm init
            docker swarm leave --force
            docker swarm join --token SWMTKN-1-05xsn9gf2caxet28b5od66d8lo3mgmaanu145s3f8lh2culd9s-4275krt3svv21ghysd3plv6f6 $SSH_HOST:2377
          no_output_timeout: 1m

      - deploy:
          name: deploy stack deploy
          command: docker stack deploy -c docker-compose.yml --with-registry-auth na-service
#
#      - deploy:
#          name: deploy image to remote
#          command: ssh $SSH_USER@$SSH_HOST "cd na && ./update-na-service.sh"